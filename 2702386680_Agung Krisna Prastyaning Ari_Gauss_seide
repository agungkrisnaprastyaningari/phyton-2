{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPjfyK+y1bTbbu3jwMmPFk3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"54RLaY7mSRdy","executionInfo":{"status":"ok","timestamp":1709016984688,"user_tz":-420,"elapsed":8,"user":{"displayName":"Krisna Ari","userId":"08587540853359940555"}},"outputId":"59cb6e65-cd4e-4c7d-93b5-4451e979ba51"},"outputs":[{"output_type":"stream","name":"stdout","text":["matrix is diagonally dominant\n"]}],"source":["import numpy as np\n","a = [[8, 3, -3], [-2, -8, 5], [3, 5, 10]]\n","\n","#find diagonal coefficients\n","diag = np.diag(np.abs(a))\n","\n","#find row sum without diagonal\n","off_diag = np.sum(np.abs(a), axis=1) - diag\n","\n","if np.all(diag > off_diag):\n","  print('matrix is diagonally dominant')\n","else:\n","  print('NOT diagnonally dominant')\n"]},{"cell_type":"code","source":["x1 = 0\n","x2 = 0\n","x3 = 0\n","epsilon = 0.01\n","converged = False\n","\n","x_old = np.array([x1, x2, x3])"],"metadata":{"id":"-lqiVP6sUCSx","executionInfo":{"status":"ok","timestamp":1709017010176,"user_tz":-420,"elapsed":2,"user":{"displayName":"Krisna Ari","userId":"08587540853359940555"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["print('iteration results')\n","print(' k,   x1,   x2,   x3 ')\n","for k in range(1,50):\n","  x1 = (14-3*x2+3*x3)/8\n","  x2 = (5+2*x1-5*x3)/(-8)\n","  x3 = (-8-3*x1-5*x2)/(10)\n","  x = np.array([x1, x2, x3])\n","  #check if it is smaller than thresheld\n","  dx = np.sqrt(np.dot(x-x_old, x-x_old))\n","\n","  print(\"%d, %.4f, %.4f, %.4f\"%(k, x1, x2, x3))\n","  if dx < epsilon:\n","    converged = True\n","    print('Converged')\n","    break\n","\n","  #assign the latest x value to the old value\n","  x_old = x\n","\n","if not converged:\n","    print('Not  converge, increase the % of the iterations')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rozEpdshUPdC","executionInfo":{"status":"ok","timestamp":1709017037004,"user_tz":-420,"elapsed":5,"user":{"displayName":"Krisna Ari","userId":"08587540853359940555"}},"outputId":"1e9fa692-48cf-42d2-e614-d42f93f40472"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["iteration results\n"," k,   x1,   x2,   x3 \n","1, 1.7500, -1.0625, -0.7937\n","2, 1.8508, -1.5838, -0.5633\n","3, 2.1327, -1.5103, -0.6847\n","4, 2.0596, -1.5678, -0.6340\n","5, 2.1002, -1.5463, -0.6569\n","6, 2.0835, -1.5565, -0.6468\n","7, 2.0911, -1.5520, -0.6513\n","Converged\n"]}]}]}